versi = "JUNGLE v1.2"
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local gui = player:WaitForChild("PlayerGui")
local character = player.Character or player.CharacterAdded:Wait()
local root = character:WaitForChild("HumanoidRootPart")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local Net =
    ReplicatedStorage:WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild(
    "net"
)
local HttpService = game:GetService("HttpService")
local ok, Replion = pcall(function() return require(ReplicatedStorage.Packages.Replion) end)
if not ok or not Replion.Client then
    warn("Replion client tidak ditemukan")
    return
end
local Client = Replion.Client
local replion_data = Client:WaitReplion("Data") -- sama seperti controller
-- Inventory biasanya berbentuk tabel: { ["Fishing Rods"] = { item1, item2, ... }, ["Items"] = {...} }
local inventory = replion_data:GetExpect({"Inventory"})

local PLATFORM_SIZE = Vector3.new(6, 0.2, 6)
local OFFSET = -3
--GLOBAL VARIABLE
local startscript = tick()
local enable_farming_event = false
local running_mancing = true
local running = true
local total_mancing = 1
local total_harga = 0
local list_inventory = {}
local list_inventory_fishs = {}
local enable_quest_farm = true
local fish_caught = false
local flag_json_memancing = false
local old_select_island = ""

local  url = "https://raw.githubusercontent.com/onekiki/JHASKDJHASDWQE/refs/heads/main/quest.json"
local WEBHOOK_URL = "https://discord.com/api/webhooks/1425376677982113832/ZjsQSZk6JZWWVQ63tdyF3Gcdz1li088TA39bAZfB5sBQj8fB-vYvMv4A7_8m21ZiCWtc"


local select_quest = nil


-- === ScreenGui utama ===
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "HAYBOT"
screenGui.Parent = gui

-- === Frame utama (container) ===
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(1, 0, 1, 100)
mainFrame.Position = UDim2.new(0, 0, 0, -100)
mainFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
mainFrame.BorderSizePixel = 0
mainFrame.BackgroundTransparency = 0.2
mainFrame.Visible = true
mainFrame.Parent = screenGui

local text_jam = Instance.new("TextLabel")
text_jam.Size = UDim2.new(0, 0, 0, 0)
text_jam.Position = UDim2.new(0.8, 0, 0.3, 0)
text_jam.Text = "00:00:00"
text_jam.Font = Enum.Font.RobotoMono
text_jam.TextSize = 80
text_jam.TextXAlignment = Enum.TextXAlignment.Center
text_jam.TextColor3 = Color3.fromRGB(230, 255, 1)
text_jam.Parent = mainFrame

local text_coin = Instance.new("TextLabel")
text_coin.Size = UDim2.new(0, 0, 0, 0)
text_coin.Position = UDim2.new(0.2, 0, 0.3, 0)
text_coin.Text = "0"
text_coin.Font = Enum.Font.RobotoMono
text_coin.TextSize = 80
text_coin.TextXAlignment = Enum.TextXAlignment.Center
text_coin.TextColor3 = Color3.fromRGB(230, 255, 1)
text_coin.Parent = mainFrame

local text_versi = Instance.new("TextLabel")
text_versi.Size = UDim2.new(0, 0, 0, 0)
text_versi.Position = UDim2.new(0.5, 0, 0, 110)
text_versi.Text = "HAYBOT " .. versi
text_versi.Font = Enum.Font.RobotoMono
text_versi.TextSize = 28
text_versi.TextXAlignment = Enum.TextXAlignment.Center
text_versi.TextColor3 = Color3.fromRGB(255, 255, 255)
text_versi.Parent = mainFrame

local text_total = Instance.new("TextLabel")
text_total.Size = UDim2.new(0, 0, 0, 0)
text_total.Position = UDim2.new(0.5, 0, 0, 170)
text_total.Text = "-"
text_total.Font = Enum.Font.Roboto
text_total.TextSize = 100
text_total.TextXAlignment = Enum.TextXAlignment.Center
text_total.TextColor3 = Color3.fromRGB(255, 217, 1)
text_total.Parent = mainFrame

local text_bp = Instance.new("TextLabel")
text_bp.Size = UDim2.new(0, 0, 0, 0)
text_bp.Position = UDim2.new(0.5, 0, 0, 240)
text_bp.Text = "0/0"
text_bp.Font = Enum.Font.Roboto
text_bp.TextSize = 50
text_bp.TextXAlignment = Enum.TextXAlignment.Center
text_bp.TextColor3 = Color3.fromRGB(179, 12, 245)
text_bp.Parent = mainFrame

local text_timer = Instance.new("TextLabel")
text_timer.Size = UDim2.new(0, 0, 0, 0)
text_timer.Position = UDim2.new(0.5, 0, 0.5, 0)
text_timer.Text = "IKAN KUNTUL"
text_timer.Font = Enum.Font.RobotoMono
text_timer.TextSize = 60
text_timer.TextXAlignment = Enum.TextXAlignment.Center
text_timer.TextColor3 = Color3.fromRGB(230, 255, 1)
text_timer.Parent = mainFrame

local text_nama = Instance.new("TextLabel")
text_nama.Size = UDim2.new(0, 0, 0, 0)
text_nama.Position = UDim2.new(0.5, 0, 0.1, 0)
text_nama.Text = player.Name
text_nama.Font = Enum.Font.RobotoMono
text_nama.TextSize = 50
text_nama.TextXAlignment = Enum.TextXAlignment.Center
text_nama.TextColor3 = Color3.fromRGB(255, 255, 255)
text_nama.Parent = mainFrame

local text_quest = Instance.new("TextLabel")
text_quest.Size = UDim2.new(0, 0, 0, 0)
text_quest.Position = UDim2.new(0.5, 0, 0.85, 0)
text_quest.Text = "QUEST KUNTUL"
text_quest.Font = Enum.Font.RobotoMono
text_quest.TextSize = 50
text_quest.TextXAlignment = Enum.TextXAlignment.Center
text_quest.TextColor3 = Color3.fromRGB(255, 255, 255)
text_quest.Parent = mainFrame

local text_ikan = Instance.new("TextLabel")
text_ikan.Size = UDim2.new(0, 0, 0, 0)
text_ikan.Position = UDim2.new(0.5, 0, 0.65, 0)
text_ikan.Text = "00"
text_ikan.Font = Enum.Font.RobotoMono
text_ikan.TextSize = 60
text_ikan.TextXAlignment = Enum.TextXAlignment.Center
text_ikan.TextColor3 = Color3.fromRGB(69, 180, 54)
text_ikan.Parent = mainFrame

local text_lokasi = Instance.new("TextLabel")
text_lokasi.Size = UDim2.new(0, 0, 0, 0)
text_lokasi.Position = UDim2.new(0.5, 0, 0.75, 0)
text_lokasi.Text = "IKAN KUNTUL"
text_lokasi.Font = Enum.Font.RobotoMono
text_lokasi.TextSize = 50
text_lokasi.TextXAlignment = Enum.TextXAlignment.Center
text_lokasi.TextColor3 = Color3.fromRGB(160, 127, 155)
text_lokasi.Parent = mainFrame

-- === Tombol Close (X) ===
local render_btn = Instance.new("TextButton")
render_btn.Size = UDim2.new(0, 60, 0, 60)
render_btn.Position = UDim2.new(1, -190, 0, 100)
render_btn.Text = "3D"
render_btn.TextSize = 40
render_btn.Visible = true
render_btn.TextXAlignment = Enum.TextXAlignment.Center
render_btn.TextColor3 = Color3.fromRGB(255, 255, 255)
render_btn.Parent = mainFrame
render_btn.BackgroundColor3 = Color3.fromRGB(49, 165, 155)

local sell_btn = Instance.new("TextButton")
sell_btn.Size = UDim2.new(0, 150, 0, 60)
sell_btn.Position = UDim2.new(0, 20, 0, 100)
sell_btn.Text = "SELL"
sell_btn.TextSize = 40
sell_btn.Visible = true
sell_btn.TextXAlignment = Enum.TextXAlignment.Center
sell_btn.TextColor3 = Color3.fromRGB(255, 255, 255)
sell_btn.Parent = mainFrame
sell_btn.BackgroundColor3 = Color3.fromRGB(250, 133, 0)

local closeBtn = Instance.new("TextButton")
closeBtn.Size = UDim2.new(0, 60, 0, 60)
closeBtn.Position = UDim2.new(1, -120, 0, 100)
closeBtn.Text = "Ð¥"
closeBtn.TextSize = 40
closeBtn.Visible = true
closeBtn.TextXAlignment = Enum.TextXAlignment.Center
closeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
closeBtn.Parent = mainFrame
closeBtn.BackgroundColor3 = Color3.fromRGB(172, 49, 49)



local list_event = {
    {
        name = "Megalodon Hunt",
        priority = 9,
        loc = {
            {-1076.3, -1.3999, 1676.19},
            {-1191.8, -1.3999, 3597.30},
            {412.700, -1.3999, 4134.39}
        }
    },
    {
        name = "Worm Hunt",
        priority = 6,
        loc = {
            {1591.55, -1.3999, -105.92},
            {-2450.6, -1.3999, 139.731},
            {-267.47, -1.3999, 5188.53}
        }
    },
    {
        name = "Ghost Shark Hunt",
        priority = 7,
        loc = {
            {489.558, -1.3500, 25.4060},
            {1976.51, -1.3500, 2915.93},
            {-1358.2, -1.3500, 4100.55},
            {627.859, -1.3500, 3798.08}
        }
    },
    {
        name = "Shark Hunt",
        priority = 4,
        loc = {
            {1.64999, -1.3500, 2095.72},
            {1369.94, -1.3500, 930.125},
            {-1585.5, -1.3500, 1242.87},
            {-1896.8, -1.3500, 2634.37}
        }
    }
}

----------------------------------------------------------------------------------
------------------- MAIN FUNGSI
----------------------------------------------------------------------------------
--[[
local list_items_id = {}
for _, child in pairs(ReplicatedStorage:WaitForChild("Items"):GetChildren()) do
    if child:IsA("ModuleScript") then
        local success, data = pcall(require, child)
        if success and data then
            list_items_id[data.Data.Id] = data
        end
    end
end
--]]

local function convert(str)
    if string.find(str, "K") then
        local num = string.gsub(str, "K", "")
        return math.floor(num * 1000)
    end
    if string.find(str, "M") then
        local num = string.gsub(str, "M", "")
        return math.floor(num * 1000000)
    end
    return tonumber(str)
end

function round(num, numDecimalPlaces)
    local mult = 10 ^ (numDecimalPlaces or 0)
    return math.floor(num * mult + 0.5) / mult
end

local function discord(message)
    local headers = {
        ["Content-Type"] = "application/json"
    }
    local prefix = "[ " .. player.Name .. " ] > "
    local data = {
        ["content"] = prefix .. message
    }
    local body = HttpService:JSONEncode(data)
    local response = request({
        Url = WEBHOOK_URL,
        Method = "POST",
        Headers = headers,
        Body = body
    })
end

local function fav(uuid)
    Net:WaitForChild("RE/FavoriteItem"):FireServer(uuid)
    task.wait(1)
end

local function auto_buy_rod(name)
    for i, v in ipairs(list_rod) do
        if v.nama == name then
            print("beli rod id:" .. v.id)
            Net:WaitForChild("RF/PurchaseFishingRod"):InvokeServer(v.id)
        end
    end
end

local function auto_buy_bait(id)
    task.wait(1)
    Net:WaitForChild("RF/PurchaseBait"):InvokeServer(id)
    task.wait(1)
    Net:WaitForChild("RE/EquipBait"):FireServer(id)
    task.wait(1)
end



local function harganizer(h)
    if h < 999 then
        result = tostring(h)
    elseif h < 1000000 then
        kk = h / 1000
        result = tostring(round(kk,2)) .. " K"
    else
        kk = h / 1000000
        result = tostring(round(kk,2)) .. " M"
    end
    return result
end

local list_harga_ikan = {}
local list_rod = {}
for _, child in pairs(ReplicatedStorage:WaitForChild("Items"):GetChildren()) do
    if child:IsA("ModuleScript") then
        local success, data = pcall(require, child)
        if success and data.Data.Type == "Fishes" then
            list_harga_ikan[data.Data.Id] = data.SellPrice
        end
        if success and string.find(data.Data.Name,"Rod") then
            list_rod[data.Data.Id] = {
                    tier = data.Data.Tier,
                    nama = data.Data.Name,
                    id = data.Data.Id
                }
        end
    end
end

local Event = Net:WaitForChild("RE/ObtainedNewFishNotification")
-- putuskan koneksi lama (opsional)
if getconnections then
    for _, conn in ipairs(getconnections(Event.OnClientEvent)) do
        conn:Disable()
    end
end

Event.OnClientEvent:Connect(function(itemId, stats, data, flag)
    if itemId == 265 or itemId== 266 or itemId == 267 or itemId == 271 then
        discord("dapat: ", itemId)
        fav(data.InventoryItem.UUID)
    end
end)

local function onFishCaught(callback)
    local connection
    local remote = Net:WaitForChild("RE/FishCaught")
    if not connection then
        connection =
            remote.OnClientEvent:Connect(
            function(name, data)
                if running then
                    callback(name, data)
                end
            end
        )
    end
end
local lastCatchTime = nil

onFishCaught(
    function(name, data)
        local varian = ""
        if data.Variants then
            varian = "[" .. tostring(data.Variants) .. "] "
        end
        
        text_ikan.Text = varian .. name .. " (" .. round(data.Weight, 2) .. " Kg)"
        if name == "Arrow Artifact" or name == "Crescent Artifact" or name == "Diamond Artifact" or name == "Hourglass Diamond Artifact" then
            discord("dapat -> ", name)
        end
        lastCatchTime = os.clock()
    end
)

-----------------------------------------------------------------
-- teleport
-----------------------------------------------------------------
local function attachSmartPlatform(char)
    -- Buat platform sekali
    local platform = Instance.new("Part")
    platform.Name = "LocalPlatform"
    platform.Size = PLATFORM_SIZE
    platform.Anchored = true
    platform.CanCollide = true
    platform.Transparency = 0.3
    platform.Color = Color3.new(1, 0, 0)
    platform.Parent = workspace

    -- Update posisi hanya ketika karakter bergerak
    local function updatePlatform()
        platform.CFrame = CFrame.new(root.Position.X, root.Position.Y + OFFSET, root.Position.Z)
    end

    updatePlatform() -- set posisi awal

    root:GetPropertyChangedSignal("Position"):Connect(updatePlatform)

    -- Jika karakter mati / hilang
    char.AncestryChanged:Connect(
        function(_, parent)
            if not parent then
                if platform and platform.Parent then
                    platform:Destroy()
                end
            end
        end
    )
end

player.CharacterAdded:Connect(attachSmartPlatform)
if player.Character then
    attachSmartPlatform(player.Character)
end

local function teleport(x, y, z)
    local char = player.Character or player.CharacterAdded:Wait()
    local root = char:FindFirstChild("HumanoidRootPart")
    if root then
        root.CFrame = CFrame.new(Vector3.new(x, y, z))
    end
end
local function face(yawDeg)
    local char = player.Character or player.CharacterAdded:Wait()
    local root = char:FindFirstChild("HumanoidRootPart")
    if root then
        local pos = root.Position
        local yaw = math.rad(yawDeg) -- derajat ke radian
        local dir = Vector3.new(math.sin(yaw), 0, math.cos(yaw))
        root.CFrame = CFrame.lookAt(pos, pos + dir)
    end
end

-----------------------------------------------------------------
--helper graphic
-----------------------------------------------------------------
local function SetLowGraphics()
    local Lighting = game:GetService("Lighting")
    local Terrain = workspace:FindFirstChildOfClass("Terrain")
    local MaterialService = game:GetService("MaterialService")
    settings().Rendering.QualityLevel = Enum.QualityLevel.Level01
    Lighting.GlobalShadows = false
    Lighting.Brightness = 1
    Lighting.EnvironmentDiffuseScale = 0
    Lighting.EnvironmentSpecularScale = 0
    for _, effect in ipairs(Lighting:GetChildren()) do
        if effect:IsA("PostEffect") then
            effect.Enabled = false
        end
    end
    if Terrain then
        Terrain.WaterWaveSize = 0
        Terrain.WaterWaveSpeed = 0
        Terrain.WaterReflectance = 0
        Terrain.WaterTransparency = 1
    end
    MaterialService.Use2022Materials = false
end
local renderEnabled = true
local uiHidden = false

local function toggle3DAndUI()
    renderEnabled = not renderEnabled
    uiHidden = not uiHidden

    RunService:Set3dRenderingEnabled(renderEnabled)
  --[[
    for _, gui in ipairs(gui:GetChildren()) do
        if gui:IsA("ScreenGui") and gui ~= screenGui then
            gui.Enabled = false -- kalau render off, UI juga ikut mati
        end
    end
    ]]
end

-----------------------------------------------------------------
--              JSON ONLINE DECODER
-----------------------------------------------------------------
local function getJSON(url)
    local response = request({
        Url = url,
        Method = "GET",
        Headers = {
            ["Accept"] = "application/json"
        }
    })

    if not response.Success then
        warn("Request gagal:", response.StatusCode)
        return nil
    end


    local ok, data = pcall(function()
        return HttpService:JSONDecode(response.Body)
    end)

    if ok then
        return data
    else
        warn("Gagal decode JSON:", data)
        return nil
    end
end

-- contoh pemakaian

local function random_island_path(island_name)
    if json and json.island and json.island[island_name] then
        local paths = json.island[island_name]
        return paths
    else
        warn("Pulau tidak ditemukan:", island_name)
        return {}
    end
end
local json = getJSON(url)
local json_enable = json.global_enable
local config_select_island = json.selected_island
local config_autosell = json.auto_sell
-----------------------------------------------------------------
--              event finder
-----------------------------------------------------------------
---
--[[
selected = nil
selected_priority = -1
local path = game:GetService("Players").LocalPlayer.PlayerGui.Events.Frame.Events
-- fungsi untuk update pilihan event
local function updateSelected()
    local new_selected = nil
    local new_priority = -1
    cetak_list_event = ""
    for i, evt in ipairs(path:GetChildren()) do
        if evt:IsA("ImageLabel") and evt.Visible then
            if string.find(evt.Name, "Hunt") then
                for _, info in ipairs(list_event) do
                    if evt.Name == info.name then
                        if info.priority > new_priority then
                            new_selected = evt
                            new_priority = info.priority
                        end
                    end
                end
            end
            cetak_list_event = cetak_list_event .. " [" .. evt.Name .. "]"
        end
    end
    if enable_farming_event then
        if new_priority ~= selected_priority then
            print("old", selected_priority)
            print("new", new_priority)
            print("[PRIORITY CHANGE] -> checkpoint aktif")
            running_mancing = false
        end
    end
    print("selected", selected)
    print("selected priority", selected_priority)
    selected = new_selected
    selected_priority = new_priority
end

-- pasang listener untuk setiap child
local function connectChild(evt)
    if evt:IsA("ImageLabel") then
        evt:GetPropertyChangedSignal("Visible"):Connect(
            function()
                updateSelected()
            end
        )
    end
end
for _, evt in ipairs(path:GetChildren()) do
    connectChild(evt)
end

-- fungsi bulatkan ke 1 desimal
local function round1(angka)
    local hasil = tostring(angka):match("^%-?%d+")
    return tonumber(hasil)
end

-- gabungan getlocation + cari_lokasi
local function getlocation(event_name)
    local props_list = {}
    local path = workspace["!!! MENU RINGS"]

    -- ambil semua props
    for _, child in ipairs(path:GetChildren()) do
        if child:IsA("Model") and child.Name == "Props" then
            local pos = child.WorldPivot.Position
            local rounded = round1(pos.X)
            table.insert(props_list, rounded) -- simpan X yang dibulatkan
        end
    end

    -- buat lookup table
    local lookup = {}
    for _, x in ipairs(props_list) do
        lookup[x] = true
    end

    -- cek ke list_event
    for _, ev in ipairs(list_event) do
        if ev.name == event_name then
            for _, loc in ipairs(ev.loc) do
                local x = round1(loc[1])
                print(x)
                if lookup[x] then
                    return loc[1], loc[2], loc[3]
                end
            end
        end
    end
    return nil -- tidak ketemu
end
--]]
function memancing()
    print("memancing")
    --root.Anchored = true
    text_lokasi.Text = player:GetAttribute("LocationName")
    Net:WaitForChild("RE/EquipToolFromHotbar"):FireServer(1)
    task.wait(1)
    print("running mancing: ", running_mancing)
    task.wait(3)
    count_mancing = 0
    while running do
        text_total.Text = count_mancing
        math.randomseed(os.time())
        local random_number = math.random() * 2 - 1
        task.wait(0.2)
        Net:WaitForChild("RF/ChargeFishingRod"):InvokeServer(tick())
        task.wait(0.5)
        Net:WaitForChild("RF/RequestFishingMinigameStarted"):InvokeServer(random_number, 1.0)
        for i = 1, 15 do
            if fish_caught == true then
                break
            end
            Net:WaitForChild("RE/FishingCompleted"):FireServer()
            task.wait(0.4)
        end
        if count_mancing % 10 == 0 then
            if running_mancing == false then
                running_mancing = true
                return
            end
        end
        fish_caught = false
        count_mancing = count_mancing + 1
    end
end

local function getOnlineTime()
    local elapsed = tick() - startscript
    return elapsed
end

local function formatTime(seconds)
    local h = math.floor(seconds / 3600)
    local m = math.floor((seconds % 3600) / 60)
    local s = math.floor(seconds % 60)
    return string.format("%02d:%02d:%02d", h, m, s)
end

local function update_inventory()
    print("update inventory")
    total_harga = 0
    list_inventory_rod = {}
    list_inventory_fishs = {}
    for category, items in pairs(inventory) do
        if category == "Fishing Rods" then
            for _, item in ipairs(items) do
             local rod_info = list_rod[item.Id]
                if rod_info then
                    list_inventory_rod[rod_info.nama] = {
                        Id = item.Id,
                        UUID = item.UUID,
                        Name = rod_info.nama,
                        Tier = rod_info.tier
                    }
                end
            end
        end
        if category == "Items" then
            for _, item in ipairs(items) do
                local h = list_harga_ikan[item.Id]
                if h ~= nil then
                    total_harga = total_harga + h
                end
                list_inventory_fishs[item.Id] = {
                    Id = item.Id,
                    UUID = item.UUID
                }
            end
        else
        end
    end
end

closeBtn.MouseButton1Click:Connect(
    function()
        running = false
        screenGui:Destroy()
    end
)

render_btn.MouseButton1Click:Connect(
    function()
       toggle3DAndUI()
    end
)

sell_btn.MouseButton1Click:Connect(
    function()
       Net:WaitForChild("RF/SellAllItems"):InvokeServer(now)
    end
)


local function best_rod_wear()
    local old_tier = 0
    local current_uuid = ""
    local best = ""
    for name, v in pairs(list_inventory_rod) do
        print(v.Name)
        if v.Tier > old_tier then
            old_tier = v.Tier
            current_uuid = v.UUID
            best = v.Name
            print("terbaik ->", v.Name,  v.Tier)
        end
    end
    if current_uuid ~= "" then
        print(best)
        Net:WaitForChild("RE/EquipItem"):FireServer(current_uuid, "Fishing Rods")
    else
        print("â ï¸ Tidak ada rod ditemukan.")
    end
end
local function teleport_string(data)
    local numbers = {}
    for value in string.gmatch(data, "[-%d%.]+") do
        table.insert(numbers, tonumber(value))
    end
    return numbers[1], numbers[2], numbers[3], numbers[4]
end
local function quest(index)
    local path = workspace["!!! MENU RINGS"]["Deep Sea Tracker"].Board.Gui.Content
    local label = path:FindFirstChild("Label" .. index)
    if label and label:IsA("TextLabel") then
        return label.Text
    else
        return nil
    end
end
local function cek_quest(text)
    if not text then return nil end
    local percent = string.match(text, "(%d+)%%") 
    if percent then
        return tonumber(percent)
    end
    return nil
end
local quest_1 = cek_quest(quest(1)) 
local quest_234 = (cek_quest(quest(2)) + cek_quest(quest(3)) + cek_quest(quest(4))) / 3


-----------------------------------------------------------------
--             M A I N
-----------------------------------------------------------------
if quest_1 == 100 then
    flag_quest_1 = true
end

task.spawn(
    function()
        local num = 1
        local flag_error = false
        while running do
            local currentTime = os.clock()
            text_jam.Text = formatTime(math.floor(getOnlineTime()))
            if lastCatchTime then
                local delta = currentTime - lastCatchTime
                delta = math.floor(delta * 10 + 0.5) / 10
                if delta < 30 then
                    flag_error = false
                    text_timer.Text = "â³" .. delta .. " sec."
                else
                    flag_error = true
                    mainFrame.BackgroundColor3 = Color3.fromRGB(197, 16, 16)
                    text_timer.Text = "â ï¸ OVER â ï¸ " .. delta .. " sec."
                    
                end
            end
            if num % 300 == 0 then -- tiap 5 menit
                mainFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
                update_inventory()
                text_coin.Text = harganizer(total_harga)
                task.wait(2)
                if json_enable then
                    if config_autosell then
                        Net:WaitForChild("RF/SellAllItems"):InvokeServer(now)  --- AUTO SELL
                    end
                else
                    Net:WaitForChild("RF/SellAllItems"):InvokeServer(now)  --- AUTO SELL
                end
                local bagsize = gui:WaitForChild("Inventory"):WaitForChild("Main"):WaitForChild("Top"):WaitForChild("Options"):WaitForChild("Fish"):WaitForChild("Label"):WaitForChild("BagSize")
                text_bp.Text = bagsize.Text
                local str = bagsize.Text
                local bpmax = str:match("^(%d+)")
                if bpmax > 4600 then
                    print("BACKPACK HAMPIR PENUH")
                    running = false
                end

                task.wait(2)
            end
            if num % 30 == 0 and flag_error == true then -- tiap 1/2 menit
                task.wait(0.5)
                Net:WaitForChild("RF/CancelFishingInputs"):InvokeServer(tick())
                task.wait(0.5)
                Net:WaitForChild("RE/FishingCompleted"):FireServer()
                task.wait(0.5)
                mainFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
                if old_select_island ~= config_select_island then
                    print("CONTROL ISLAND BARU DITEMUKAN")
                    running_mancing = false
                    old_select_island = config_select_island
                end
                if select_quest == "jungle" then
                     local quest1, quest2, quest3, quest4 = true
                    if list_inventory_fishs[265] == nil and quest1 == true then
                        running_mancing = false
                        quest1 = false
                    end
                    if list_inventory_fishs[266] == nil and quest2 == true then
                        running_mancing = false
                        quest2 = false
                    end
                    if list_inventory_fishs[267] == nil and quest3 == true then
                        running_mancing = false
                        quest3 = false
                    end
                    if list_inventory_fishs[271] == nil and quest4 == true then
                        running_mancing = false
                        quest4 = false
                    end
                end --end select quest

            end
            num = num + 1
            task.wait(1)
        end
    end
)

----------------------------------------------------------------------------------------------------------------------------
---
---MULAI ALGORITMA
---
--discord("online")
SetLowGraphics()
toggle3DAndUI()
select_quest = "jungle"

update_inventory()

--best_rod_wear()
local step = 1
if select_quest == "jungle" then
    while running do
        
        if step == 1 then
            if list_inventory_fishs[265] == nil then
                text_quest.Text = "1 > Arrow artefak"
                x, y, z, arah = teleport_string(json.quest.jungle.arrow)
            elseif list_inventory_fishs[266] == nil then
                text_quest.Text = "2 > crescent artefak"
                x, y, z, arah = teleport_string(json.quest.jungle.crescent)
            elseif ist_inventory_fishs[267] == nil then
                text_quest.Text = "3 > diamond artefak"
                x, y, z, arah = teleport_string(json.quest.jungle.diamond)
            elseif list_inventory_fishs[271] == nil then
                text_quest.Text = "4 > hourglass artefak"
                x, y, z, arah = teleport_string(json.quest.jungle.hourglass)
            else
                print("selesai step 1")
                text_quest.Text ="selesai step 1"
                step = step + 1
            end
            teleport(x, y, z)
            task.wait(3)
            face(arah)
            task.wait(1)
            memancing()
        end
        if step == 2 then
            discord("sudah sampai step 2")
            text_quest.Text ="STEP 2 !!"
            break
        end
        print("loop running progress quest")
        task.wait(10)
    end
end
    --[[
print("JSON ENABLE:", json_enable)
if json_enable then
    status_online.BackgroundColor3 = Color3.fromRGB(38, 155, 38)
    print("cek online data")
    enable_farming_event = config_farm_event
    enable_quest_farm  = config_farm_quest
    flag_json_memancing = true
    old_select_island = config_select_island
    print("config_farm_event",config_farm_event)
    print("enable_quest_farm",enable_quest_farm)
    print("config_select_island", config_select_island)
end

local function farming_island()
    task.wait(1)
    if json_enable then
        local island_paths = json.island[config_select_island]
        if island_paths ~= nil then
            print("total path: ",  #island_paths)
            if #island_paths > 0 then
                local random_path = island_paths[math.random(1, #island_paths)]
                print("Random selected path:", random_path)
                local numbers = {}
                for value in string.gmatch(random_path, "[-%d%.]+") do
                    table.insert(numbers, tonumber(value))
                end
                teleport(numbers[1], numbers[2], numbers[3])
            else
                print("gagal mengambil data island")
                teleport(1607, 5, -414)
            end
        else
            warn("gagal menemukan island")
        end
    else
        print("json not enable")
        teleport(1607, 5, -414)
    end
    task.wait(3)
    face(0)
    task.wait(1)
    memancing()
    print("selesai island")
    task.wait(1)
end
local function farming_event(evt)
    print("event: ", evt)
    local x, y, z = getlocation(evt)
    if x then
        print("Ketemu lokasi:", x, y, z)
        teleport(x + math.random(1,12), 3, z + math.random(1,12))
        task.wait(3)
        face(0)
        task.wait(1)
        memancing()
        task.wait(1)
        print("selesai event")
    else
        print("tidak ketemu lokasinya!")
        farming_island()
    end
end

updateSelected()

task.wait(2)
while running do
    if enable_quest_farm then
        if quest_1 < 100 then
            enable_farming_event = false
            teleport(-3602, -283, -1612)
            task.wait(3)
            face(120)
            task.wait(1)
            memancing()
        end
        if quest_1 == 100 and quest_234 < 100 then
            enable_farming_event = false
            teleport(-3734, -135, -1013)
            task.wait(3)
            face(0)
            task.wait(1)
            memancing()
        end
        enable_farming_event = true
        text_ikan.Text ="semua quest selesai"
        print("semua quest selesai")
    end
    if selected ~= nil and enable_farming_event then
        text_quest.Text = selected.Name
        farming_event(selected.Name)
    else
        if json_enable then
            text_quest.Text = config_select_island
        end
        farming_island()
    end
    root.Anchored = false
    task.wait(5)
end
--]]
root.Anchored = false
print("running : ", running)
print("-----------------end-")

-----------------------------------------------------------------
--               E N D     M A I N
-----------------------------------------------------------------
