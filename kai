versi = "KAITUN V1.4.3" -- fix flag
local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local player = Players.LocalPlayer
local gui = player:WaitForChild("PlayerGui")
local character = player.Character or player.CharacterAdded:Wait()
local root = character:WaitForChild("HumanoidRootPart")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local Net =
    ReplicatedStorage:WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild(
    "net"
)
local HttpService = game:GetService("HttpService")
local dailyLoginGui = gui:FindFirstChild("!!! Daily Login")
local koin = gui:WaitForChild("Events").Frame.CurrencyCounter.Counter.Text

local ok, Replion =
    pcall(
    function()
        return require(ReplicatedStorage.Packages.Replion)
    end
)
if not ok or not Replion.Client then
    warn("Replion client tidak ditemukan")
    return
end
local stop_watching = false
local PLATFORM_SIZE = Vector3.new(6, 0.2, 6)
local OFFSET = -3
--GLOBAL VARIABLE
local startscript = tick()
local running = true
local list_inventory_rod = {}
local list_inventory_fishs = {}
local fish_caught = false
local count_mancing = 0
local step = 0
local progress_quest1 = 0
local progress_quest2 = 0
local progress_quest3 = 0
local progress_quest4 = 0
local status = "RUNNING"
local list_secret = {}
local list_mythic = {}
local list_display = {}
local list_trade_batu = {}
local list_inv_item_uuid = {}
local playing = true
local url = "https://raw.githubusercontent.com/onekiki/JHASKDJHASDWQE/refs/heads/main/quest.json"

local SERVER_URL = "https://hayfishit.dpdns.org/update"
local token = "kcjhcklnmwkhdckahweckuqhcdqukcheiuqd"

local total_harga_secret = 0
local total_harga_mythic = 0

local placeId = game.PlaceId
local jobId = game.JobId

local select_quest = "none"
local master_user = "hayfish96"
local current_rod = ""
-- === ScreenGui utama ===
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "HAYBOT"
screenGui.Parent = gui

--//ANCHOR gui
-- === Frame utama (container) ===
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(1, 0, 1, 100)
mainFrame.Position = UDim2.new(0, 0, 0, -100)
mainFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
mainFrame.BorderSizePixel = 0
mainFrame.BackgroundTransparency = 0
mainFrame.Visible = true
mainFrame.Parent = screenGui

local text_jam = Instance.new("TextLabel")
text_jam.Size =  UDim2.new(1, 0, 0.1, 0)
text_jam.Position = UDim2.new(0, 0, 0.3, 0)
text_jam.Text = "00:00:00"
text_jam.Font = Enum.Font.RobotoMono
text_jam.TextScaled = true
text_jam.BackgroundTransparency = 1
text_jam.TextXAlignment = Enum.TextXAlignment.Center
text_jam.TextColor3 = Color3.fromRGB(230, 255, 1)
text_jam.Parent = mainFrame

local text_info = Instance.new("TextLabel")
text_info.Size = UDim2.new(1, 50, 0.15, 0)
text_info.Position = UDim2.new(0, 0, 0.65, 0)
text_info.Text = "activity"
text_info.Font = Enum.Font.Roboto
text_info.TextScaled = true
text_info.BackgroundTransparency = 1
text_info.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
text_info.TextXAlignment = Enum.TextXAlignment.Center
text_info.TextColor3 = Color3.fromRGB(255, 255, 255)
text_info.Parent = mainFrame

local text_progress = Instance.new("TextLabel")
text_progress.Size = UDim2.new(1, 50, 0.1, 0)
text_progress.Position = UDim2.new(0, 0, 0.8, 0)
text_progress.Text = "progress.."
text_progress.Font = Enum.Font.Roboto
text_progress.TextScaled = true
text_progress.BackgroundTransparency = 1
text_progress.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
text_progress.TextXAlignment = Enum.TextXAlignment.Center
text_progress.TextColor3 = Color3.fromRGB(255, 255, 255)
text_progress.Parent = mainFrame

local text_versi = Instance.new("TextLabel")
text_versi.Size = UDim2.new(0, 0, 0, 0)
text_versi.Position = UDim2.new(0.5, 0, 0, 110)
text_versi.Text = "HAYBOT " .. versi
text_versi.Font = Enum.Font.RobotoMono
text_versi.TextSize = 28
text_versi.TextXAlignment = Enum.TextXAlignment.Center
text_versi.TextColor3 = Color3.fromRGB(255, 255, 255)
text_versi.Parent = mainFrame

local text_timer = Instance.new("TextLabel")
text_timer.Size = UDim2.new(1, 0, 0.1, 0)
text_timer.Position = UDim2.new(0, 0, 0.5, 0)
text_timer.Text = "üü¢"
text_timer.BackgroundTransparency = 1
text_timer.Font = Enum.Font.RobotoMono
text_timer.TextScaled = true
text_timer.TextXAlignment = Enum.TextXAlignment.Center
text_timer.TextColor3 = Color3.fromRGB(230, 255, 1)
text_timer.Parent = mainFrame

local text_nama = Instance.new("TextLabel")
text_nama.Size = UDim2.new(0, 0, 0, 0)
text_nama.Position = UDim2.new(0.5, 0, 0.1, 0)
text_nama.Text = player.Name
text_nama.Font = Enum.Font.RobotoMono
text_nama.TextSize = 50
text_nama.TextXAlignment = Enum.TextXAlignment.Center
text_nama.TextColor3 = Color3.fromRGB(255, 255, 255)
text_nama.Parent = mainFrame

local btn_reload = Instance.new("TextButton")
btn_reload.Size = UDim2.new(0, 40, 0, 40)
btn_reload.Position = UDim2.new(0, 180, 0, 130)
btn_reload.Text = "üîÑ"
btn_reload.TextScaled = true
btn_reload.Visible = true
btn_reload.TextXAlignment = Enum.TextXAlignment.Center
btn_reload.TextColor3 = Color3.fromRGB(255, 255, 255)
btn_reload.Parent = mainFrame
btn_reload.BackgroundColor3 = Color3.fromRGB(77, 77, 77)

local closeBtn = Instance.new("TextButton")
closeBtn.Size = UDim2.new(0, 40, 0, 40)
closeBtn.Position = UDim2.new(0, 100, 0, 130)
closeBtn.Text = "‚ùå"
closeBtn.TextScaled = true
closeBtn.Visible = true
closeBtn.TextXAlignment = Enum.TextXAlignment.Center
closeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
closeBtn.Parent = mainFrame

local btn_stop = Instance.new("TextButton")
btn_stop.Size = UDim2.new(0, 40, 0, 40)
btn_stop.Position = UDim2.new(0, 140, 0, 130)
btn_stop.Text = "‚è∏Ô∏è"
btn_stop.TextScaled = true
btn_stop.Visible = true
btn_stop.TextXAlignment = Enum.TextXAlignment.Center
btn_stop.TextColor3 = Color3.fromRGB(255, 255, 255)
btn_stop.BackgroundColor3 = Color3.fromRGB(77, 77, 77)
btn_stop.Parent = mainFrame

local render_btn = Instance.new("TextButton")
render_btn.Size = UDim2.new(0, 40, 0, 40)
render_btn.Position = UDim2.new(0, 220, 0, 130)
render_btn.Text = "üëÅÔ∏è"
render_btn.Visible = true
render_btn.TextScaled = true
render_btn.TextXAlignment = Enum.TextXAlignment.Center
render_btn.TextColor3 = Color3.fromRGB(255, 255, 255)
render_btn.Parent = mainFrame

-- Buat tombol utama (dropdown)
local dropdownButton = Instance.new("TextButton")
dropdownButton.Size = UDim2.new(0, 80, 0, 40)
dropdownButton.Position = UDim2.new(0, 20, 0, 130)
dropdownButton.BackgroundColor3 = Color3.fromRGB(141, 61, 161)
dropdownButton.TextColor3 = Color3.new(1, 1, 1)
dropdownButton.Font = Enum.Font.Roboto
dropdownButton.TextScaled = true
dropdownButton.Text = "MENU ‚ñº"
dropdownButton.Parent = mainFrame

-- Frame isi dropdown
local dropdownFrame = Instance.new("Frame")
dropdownFrame.Size = UDim2.new(0, 200, 0, 0)
dropdownFrame.Position = UDim2.new(0, 20, 0, 180)
dropdownFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
dropdownFrame.BorderSizePixel = 1
dropdownFrame.Visible = false
dropdownFrame.ClipsDescendants = true
dropdownFrame.Parent = mainFrame

local last_msg
local function pesan(msg)
    last_msg = msg
    text_info.Text = msg
    print(msg)
end

--// ANCHOR OPTION MENU
local options = {
                "Trade Secret","Trade Mythic", "Trade Stone", "Enchant I", "Enchant II", "Listen Trade", 
                "Auto Buy", "Wear Rod", "Jobs ID", "Fishing", "teleport custom", "show backpack"
            }

local function opsia(x)
    opsi(x)
end -- Buat tombol untuk setiap opsi
-- pengaturan layout
local maxPerColumn = 6
local optionHeight = 40
local columnWidth = 200

-- hitung total kolom
local numColumns = math.ceil(#options / maxPerColumn)
dropdownFrame.Size = UDim2.new(0, columnWidth * numColumns, 0, 0)

for i, text in ipairs(options) do
    local column = math.floor((i - 1) / maxPerColumn)
    local row = (i - 1) % maxPerColumn

    local option = Instance.new("TextButton")
    option.Size = UDim2.new(0, columnWidth, 0, optionHeight)
    option.Position = UDim2.new(0, column * columnWidth, 0, row * optionHeight)
    option.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
    option.TextColor3 = Color3.new(1, 1, 1)
    option.Font = Enum.Font.Roboto
    option.TextScaled = true
    option.Text = text
    option.Parent = dropdownFrame

    -- Hover efek
    option.MouseEnter:Connect(function()
        option.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    end)
    option.MouseLeave:Connect(function()
        option.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
    end)

    -- Klik opsi
    option.MouseButton1Click:Connect(function()
        dropdownButton.Text = text .. " ‚ñº"
        dropdownFrame:TweenSize(UDim2.new(0, columnWidth * numColumns, 0, 0), "Out", "Sine", 0.2, true)
        task.delay(0.2, function()
            dropdownFrame.Visible = false
        end)
        opsia(i)
    end)
end

-- Fungsi toggle dropdown
dropdownButton.MouseButton1Click:Connect(function()
    if dropdownFrame.Visible then
        dropdownFrame:TweenSize(UDim2.new(0, columnWidth * numColumns, 0, 0), "Out", "Sine", 0.2, true)
        task.delay(0.2, function()
            dropdownFrame.Visible = false
        end)
    else
        dropdownFrame.Visible = true
        local totalHeight = math.min(#options, maxPerColumn) * optionHeight
        dropdownFrame:TweenSize(UDim2.new(0, columnWidth * numColumns, 0, totalHeight), "Out", "Sine", 0.2, true)
    end
end)
----------------------------------------------------------------------------------
------------------- MAIN FUNGSI
----------------------------------------------------------------------------------

local function getOnlineTime()
    local elapsed = tick() - startscript
    return elapsed
end

local function formatTime(seconds)
    local h = math.floor(seconds / 3600)
    local m = math.floor((seconds % 3600) / 60)
    local s = math.floor(seconds % 60)
    return string.format("%02d:%02d:%02d", h, m, s)
end

local function rejoinSameServer()
    if not player then
        return
    end
    -- pcall supaya aman jika error
    local ok, err =
        pcall(
        function()
            TeleportService:TeleportToPlaceInstance(placeId, jobId, player)
        end
    )
    if not ok then
        warn("Rejoin gagal: " .. tostring(err))
    end
end

local function cek_quest(text)
    print(text)
    if not text then
        return 0
    end
    local percent = string.match(text, "(%d+)%%")
    if percent then
        return tonumber(percent)
    end
    return 0
end

local function convert(str)
    if string.find(str, "K") then
        local num = string.gsub(str, "K", "")
        return math.floor(num * 1000)
    end
    if string.find(str, "M") then
        local num = string.gsub(str, "M", "")
        return math.floor(num * 1000000)
    end
    return tonumber(str)
end

function round(num, numDecimalPlaces)
    local mult = 10 ^ (numDecimalPlaces or 0)
    return math.floor(num * mult + 0.5) / mult
end

local function fav(uuid)
    Net:WaitForChild("RE/FavoriteItem"):FireServer(uuid)
    task.wait(1)
end

local function auto_buy_rod(id)
    print("beli rod id:", id)
    Net:WaitForChild("RF/PurchaseFishingRod"):InvokeServer(id)
end

local function auto_buy_bait(id)
    print("beli bait id:", id)
    Net:WaitForChild("RF/PurchaseBait"):InvokeServer(id)
    task.wait(1)
    Net:WaitForChild("RE/EquipBait"):FireServer(id)
end

local function konvert_harga(h)
    if h < 999 then
        result = tostring(h)
    elseif h < 1000000 then
        kk = h / 1000
        result = tostring(round(kk, 2)) .. " K"
    else
        kk = h / 1000000
        result = tostring(round(kk, 2)) .. " M"
    end
    return result
end

local list_ikan = {}
local list_rod = {}
for _, child in pairs(ReplicatedStorage:WaitForChild("Items"):GetChildren()) do
    if child:IsA("ModuleScript") then
        local success, data = pcall(require, child)
        if success and data.Data.Type == "Fishes" then
            list_ikan[data.Data.Id] = {
                harga = data.SellPrice,
                tier = data.Data.Tier,
                nama = data.Data.Name,
                id = data.Data.Id
            }
        end
        if success and string.find(data.Data.Name, "Rod") then
            list_rod[data.Data.Id] = {
                tier = data.Data.Tier,
                nama = data.Data.Name,
                id = data.Data.Id
            }
        end
    end
end
--//ANCHOR connection
local Event = Net:WaitForChild("RE/ObtainedNewFishNotification")
-- putuskan koneksi lama (opsional)
if getconnections then
    for _, conn in ipairs(getconnections(Event.OnClientEvent)) do
        conn:Disable()
    end
end

Event.OnClientEvent:Connect(
    function(itemId, stats, data, flag)
        fish_caught = true
        if itemId == 265 or itemId == 266 or itemId == 267 or itemId == 271 then
            fav(data.InventoryItem.UUID)
        end
    end
)

local function onFishCaught(callback)
    local connection
    local remote = Net:WaitForChild("RE/FishCaught")
    if not connection then
        connection =
            remote.OnClientEvent:Connect(
            function(name, data)
                if running then
                    callback(name, data)
                end
            end
        )
    end
end
local lastCatchTime = nil

onFishCaught(
    function(name, data)
        lastCatchTime = os.clock()
    end
)

local block_bait = Net:WaitForChild("RE/BaitSpawned")
--local block_text_effect = Net:WaitForChild("RE/ReplicateTextEffect")
--local block_effect = Net:WaitForChild("RE/PlayFishingEffect")
local function block(evn)
    if getconnections then
        for _, conn in ipairs(getconnections(evn.OnClientEvent)) do
            conn:Disable()
        end
    end
end
block(block_bait)

block_bait.OnClientEvent:Connect(
    function()
    end
)
--block_text_effect.OnClientEvent:Connect(function() end)
--block_effect.OnClientEvent:Connect(function() end)
-----------------------------------------------------------------
-- teleport
-----------------------------------------------------------------

local function attachSmartPlatform(char)
    -- Buat platform sekali
    local platform = Instance.new("Part")
    platform.Name = "LocalPlatform"
    platform.Size = PLATFORM_SIZE
    platform.Anchored = true
    platform.CanCollide = true
    platform.Transparency = 0.3
    platform.Color = Color3.new(1, 0, 0)
    platform.Parent = workspace

    -- Update posisi hanya ketika karakter bergerak
    local function updatePlatform()
        platform.CFrame = CFrame.new(root.Position.X, root.Position.Y + OFFSET, root.Position.Z)
    end

    updatePlatform() -- set posisi awal

    root:GetPropertyChangedSignal("Position"):Connect(updatePlatform)

    -- Jika karakter mati / hilang
    char.AncestryChanged:Connect(
        function(_, parent)
            if not parent then
                if platform and platform.Parent then
                    platform:Destroy()
                end
            end
        end
    )
end

local function teleport(x, y, z)
    local char = player.Character or player.CharacterAdded:Wait()
    local root = char:FindFirstChild("HumanoidRootPart")
    if root then
        root.CFrame = CFrame.new(Vector3.new(x, y, z))
    end
end
local function face(yawDeg)
    local char = player.Character or player.CharacterAdded:Wait()
    local root = char:FindFirstChild("HumanoidRootPart")
    if root then
        local pos = root.Position
        local yaw = math.rad(yawDeg) -- derajat ke radian
        local dir = Vector3.new(math.sin(yaw), 0, math.cos(yaw))
        root.CFrame = CFrame.lookAt(pos, pos + dir)
    end
end

-----------------------------------------------------------------
--helper graphic
-----------------------------------------------------------------
local function SetLowGraphics()
    local Lighting = game:GetService("Lighting")
    local Terrain = workspace:FindFirstChildOfClass("Terrain")
    local MaterialService = game:GetService("MaterialService")
    settings().Rendering.QualityLevel = Enum.QualityLevel.Level01
    Lighting.GlobalShadows = false
    Lighting.Brightness = 1
    Lighting.EnvironmentDiffuseScale = 0
    Lighting.EnvironmentSpecularScale = 0
    for _, effect in ipairs(Lighting:GetChildren()) do
        if effect:IsA("PostEffect") then
            effect.Enabled = false
        end
    end
    if Terrain then
        Terrain.WaterWaveSize = 0
        Terrain.WaterWaveSpeed = 0
        Terrain.WaterReflectance = 0
        Terrain.WaterTransparency = 1
    end
    MaterialService.Use2022Materials = false
end
local renderEnabled = true
local uiHidden = false

local function toggle3DAndUI()
    renderEnabled = not renderEnabled
    uiHidden = not uiHidden
    if renderEnabled == true then
        --setfpscap(2)
        mainFrame.BackgroundTransparency = 1
    else
        --setfpscap(15)
        mainFrame.BackgroundTransparency = 0
    end
    RunService:Set3dRenderingEnabled(renderEnabled)

    for _, gui in ipairs(gui:GetChildren()) do
        if gui:IsA("ScreenGui") and gui ~= screenGui then
            gui.Enabled = false -- kalau render off, UI juga ikut mati
        end
    end
end

-----------------------------------------------------------------
--              JSON ONLINE DECODER
-----------------------------------------------------------------

local function getJSON(url)
    local response =
        request(
        {
            Url = url,
            Method = "GET",
            Headers = {
                ["Accept"] = "application/json"
            }
        }
    )

    if not response.Success then
        warn("Request gagal:", response.StatusCode)
        return nil
    end

    local ok, data =
        pcall(
        function()
            return HttpService:JSONDecode(response.Body)
        end
    )

    if ok then
        return data
    else
        warn("Gagal decode JSON:", data)
        return nil
    end
end

-- contoh pemakaian

local last_json_data = nil
local function ambilData()
    for i = 1, 3 do
        local success, result =
            pcall(
            function()
                return getJSON(url)
            end
        )
        if success and result then
            last_json_data = result
            return result
        else
            warn(("Percobaan %d gagal"):format(i))
            task.wait(1)
        end
    end
    warn("Semua percobaan gagal, pakai data lama.")
    return last_json_data
end
local json = ambilData()
if json then
    print("JSON:", json)
else
    warn("Tidak ada data sama sekali (belum pernah berhasil ambil).")
end
local config_auto_running = json.auto_running

if config_auto_running == false then
    pesan("AUTO RUN STOP")
    running = false
end
--//ANCHOR UPDATE INVENTORY
local function update_inventory()
    local Client = Replion.Client
    local replion_data = Client:WaitReplion("Data")
    local inventory = replion_data:GetExpect({"Inventory"})
    print("update inventory")
    total_harga_secret = 0
    total_harga_mythic = 0
    local listing = 1
    list_secret = {}
    list_display = {}
    list_mythic = {}
    list_trade_batu = {}
    list_inv_item_uuid = {}
    for category, items in pairs(inventory) do
        if category == "Fishing Rods" then
            for _, item in ipairs(items) do
                local rod_info = list_rod[item.Id]
                if rod_info then
                    list_inventory_rod[rod_info.nama] = {
                        Id = item.Id,
                        UUID = item.UUID,
                        Name = rod_info.nama,
                        Tier = rod_info.tier
                    }
                end
            end
        end
        if category == "Items" then
            for i, item in ipairs(items) do
                table.insert(list_inv_item_uuid, item.UUID)
                if item.Id == 10 then
                    table.insert(list_trade_batu, item.UUID)
                end
                
                if list_ikan[item.Id] then
                    local berat = item.Metadata and item.Metadata.Weight or 0
                    local nama = list_ikan[item.Id].nama
                    local uuid = item.UUID

                    if list_ikan[item.Id].tier == 7 then -- total ikan secret
                        table.insert(list_secret, uuid)
                        total_harga_secret = total_harga_secret + list_ikan[item.Id].harga
                    end
                    if list_ikan[item.Id].tier == 6 then --total ikan mythic
                        table.insert(list_mythic, uuid)
                        total_harga_mythic = total_harga_mythic + list_ikan[item.Id].harga
                    end
                    if list_ikan[item.Id].tier > 6 then -- LIST TRADE
                    print("list display item")
                        local text_sec = listing .. ". " .. nama .. " - " .. konvert_harga(berat) .. " Kg <br>"
                        table.insert(list_display, text_sec)
                        listing = listing + 1
                    end
                end
                list_inventory_fishs[item.Id] = {
                    Id = item.Id,
                    UUID = item.UUID
                }
            end
        end
    end
end

--//ANCHOR BTN
closeBtn.MouseButton1Click:Connect(
    function()
        running = false
        playing = false
        screenGui:Destroy()
    end
)

btn_stop.MouseButton1Click:Connect(
    function()
        running = not running
        if not running then
            btn_stop.Text = "‚è∏Ô∏è"
            pesan("STOP")
        else
            btn_stop.Text = "‚ñ∂Ô∏è"
            pesan("START")
        end
    end
)

render_btn.MouseButton1Click:Connect(
    function()
        toggle3DAndUI()
    end
)

btn_reload.MouseButton1Click:Connect(
    function()
        rejoinSameServer()
    end
)

local function custom_trade(custom_list, limit)
    local completed = false
    Net:WaitForChild("RE/TextNotification").OnClientEvent:Connect(
        function(data)
            if data and data.Text == "Trade completed!" then
                completed = true
            end
        end
    )
    update_inventory()
    running = false
    print("RUNNING ", running)
    pesan("trading di mulai...")
    --local targetName = "hayfish96"
    local berhasil = 0
    local info_akhir = ""
    local targetName = master_user
    local function trade_user(usr)
        if usr.Name == targetName then
            print("Player ditemukan:", usr.Name, "UserId:", usr.UserId)
            if custom_list ~= nil then
                for i, uuid in ipairs(custom_list) do
                    Net:WaitForChild("RE/EquipItem"):FireServer(uuid, "Fishes")
                    Net:WaitForChild("RF/InitiateTrade"):InvokeServer(usr.UserId, uuid)
                    local timeout = 0
                    while completed ~= true do
                        print("wait")
                        timeout = timeout + 1
                        if timeout > 30 then
                            print("timeout lebih dari 15 detik")
                            break
                        end
                        task.wait(0.2)
                    end
                    if timeout < 30 then
                        berhasil = berhasil + 1
                    end
                    completed = false
                    info_akhir = "TRADE " .. berhasil .. "/" .. #custom_list
                    pesan(info_akhir)
                    task.wait(1)
                    if limit > 0 and i > limit then
                        print("limit trade telah tercapai")
                        break
                    end
                end
            else
                pesan("tidak ada barang lagi")
            end
            pesan("SELESAI SEMUA " .. info_akhir)
            print("clear list")
            running = true
        end
    end
    local existing = Players:FindFirstChild(targetName)
    if existing then
        trade_user(existing)
    else
        pesan("player tidak ada")
    end
end
local function auto_enchant()
    update_inventory()
    teleport(3243, -1302, 1402)
    task.wait(3)
    local RollEnchant = Net:WaitForChild("RE/RollEnchant")
    local flag_berhasil_enchant = false
    local wait_enchant = false
    -- --[[  ]]
    RollEnchant.OnClientEvent:Connect(
        function(waktu, id, v, flag)
            print("Event RollEnchant diterima!")
            print("ID:", id)
            print("Value1:", v)
            print("Flag:", flag)
            if id == 14 or id == 9 then --hunter
                flag_berhasil_enchant = true
            end
            if flag then
                wait_enchant = true
            end
        end
    )

    print("start")
    for i, k in ipairs(list_inv_item_uuid) do
        Net:WaitForChild("RE/UnequipItem"):FireServer(k)
        task.wait(0.1)
    end
    print("wait unequipt all")
    for i, k in ipairs(list_trade_batu) do
        print("enchant ", k)
        Net:WaitForChild("RE/EquipItem"):FireServer(k, "EnchantStones")
        task.wait(1)
        Net:WaitForChild("RE/EquipToolFromHotbar"):FireServer(2)
        task.wait(1)
        Net:WaitForChild("RE/ActivateEnchantingAltar"):FireServer()
        task.wait(2)
        if i > #list_trade_batu or flag_berhasil_enchant == true then
            print("selesai enchant")
            break
        end
    end
    pesan("selesai enchant")
end
local function best_rod_wear()
    local old_tier = 0
    local current_uuid = ""
    local best = nil
    for name, v in pairs(list_inventory_rod) do
        print(v.Name)
        if v.Tier > old_tier then
            old_tier = v.Tier
            current_uuid = v.UUID
            best = v.Name
        end
    end
    if current_uuid ~= "" then
        print(best)
        Net:WaitForChild("RE/EquipItem"):FireServer(current_uuid, "Fishing Rods")
        return best
    else
        print("‚ö†Ô∏è Tidak ada rod ditemukan.")
    end
end
local numbers = {}
local function teleport_string(data)
    for value in string.gmatch(data, "[-%d%.]+") do
        table.insert(numbers, tonumber(value))
    end
    return numbers[1], numbers[2], numbers[3], numbers[4]
end
local function quest_deep_sea(index)
    local path = workspace["!!! MENU RINGS"]["Deep Sea Tracker"].Board.Gui.Content
    local label = path:FindFirstChild("Label" .. index)
    if label and label:IsA("TextLabel") then
        return label.Text
    else
        print("quest not found")
        return 0
    end
end
local function quest_jungle(index)
    local path = workspace["!!! MENU RINGS"]["Element Tracker"].Board.Gui.Content
    local label = path:FindFirstChild("Label" .. index)
    if label and label:IsA("TextLabel") then
        return label.Text
    else
        print("quest not found")
        return 0
    end
end
--// ANCHOR UPDATE QUEST
local function update_quest()
    print("quest:", select_quest)
    if select_quest == "jungle" then
        progress_quest1 = cek_quest(quest_jungle(1))
        progress_quest2 = cek_quest(quest_jungle(2))
        progress_quest3 = cek_quest(quest_jungle(3))
        progress_quest4 = cek_quest(quest_jungle(4))
    elseif select_quest == "deep_sea" then
        progress_quest1 = cek_quest(quest_deep_sea(1))
        progress_quest2 = cek_quest(quest_deep_sea(2))
        progress_quest3 = cek_quest(quest_deep_sea(3))
        progress_quest4 = cek_quest(quest_deep_sea(4))
    end
    text_progress.Text = select_quest .. " > " .. progress_quest1 .. " - " .. progress_quest2 .. " - " .. progress_quest3 .. " - " .. progress_quest4
end
local function auto_buy()
    print("start auto buy")
    local koins = convert(koin)
    if list_inventory_rod["Midnight Rod"] == nil and koins > 50000 then
        print("beli rod midnight")
        auto_buy_bait(3) -- corrupt
        auto_buy_rod(80) -- midnight rod
        best_rod_wear()
    end
    if list_inventory_rod["Astral Rod"] == nil and koins > 1150000 then
        print("beli rod astral")
        auto_buy_bait(15) -- corrupt
        auto_buy_rod(5) -- astral rod
        best_rod_wear()
    end
    if list_inventory_rod["Ghostfinn Rod"] ~= nil and koins > 4000000 then
        auto_buy_bait(20)
    end
end

local function auto_fish()
        if count_mancing % 200 == 0 then
            update_inventory() 
            update_quest()
            auto_buy()
        end
        math.randomseed(os.time())
        local random_number = math.random() * 2 - 1
        task.wait(0.01)
        Net:WaitForChild("RF/ChargeFishingRod"):InvokeServer(tick())
        task.wait(0.01)
        Net:WaitForChild("RF/RequestFishingMinigameStarted"):InvokeServer(random_number, 1.0)
        for i = 1, 15 do
            if fish_caught == true then
                break
            end
            Net:WaitForChild("RE/FishingCompleted"):FireServer()
            task.wait(0.3)
        end
        fish_caught = false
        count_mancing = count_mancing + 1
end

local function hapus_gui_daily()
    if dailyLoginGui and dailyLoginGui:IsA("ScreenGui") then
        if dailyLoginGui.Enabled then
            dailyLoginGui:Destroy()
            print("ScreenGui '!!! Daily Login' dihapus.")
        else
            print("'!!! Daily Login' ada tapi tidak aktif.")
        end
    end
    local playerList = game:GetService("CoreGui"):FindFirstChild("PlayerList")
    if playerList then
        playerList.Enabled = false
    end
end

--//ANCHOR OPSI FUNCTION

function opsi(index)
    if index == 1 then
        custom_trade(list_secret, 0)
    elseif index == 2 then
        custom_trade(list_mythic, 0)
    elseif index == 3 then
        custom_trade(list_trade_batu, 5)
    elseif index == 4 then
        auto_enchant()
    elseif index == 5 then
        teleport(1486, 128, -592)
    elseif index == 6 then
        pesan("Waiting to trade....")
        local RF = Net:WaitForChild("RF/AwaitTradeResponse")
        RF.OnClientInvoke = function(...)
            local args = {...}
            local maybeData = args[2]
            if type(maybeData) == "table" then
                print("Trade offer:", maybeData.Id, maybeData.UUID)
            end
            task.wait(4.5)
            pesan("Trade Accepted")
            return "OK"
        end
    elseif index == 7 then
        auto_buy()
    elseif index == 8 then
        best_rod_wear()
    elseif index == 9 then
        local jobId = game.JobId
        if setclipboard then
            setclipboard(jobId)
            task.wait(1.5)
            pesan("berhasil copy job id")
        else
            pesan("gagal copy job id")
        end
    elseif index == 10 then
        while playing do
            auto_fish()
        end
    elseif index == 11 then
        local backpackGui = gui:WaitForChild("Backpack")
        for _, child in ipairs(backpackGui:GetChildren()) do
            if child:IsA("GuiObject") then
                child.Enabled = true
            end
        end
    end
    
end
local function display_inventory()
    local list = ""
    if list_display then
        for i, k in ipairs(list_display) do
            list = list .. "|" .. k
        end
        local hasil = list:gsub("^|", "")
        return hasil
    else
        return "tidak ada secret :("
    end
end
local function send_Data(status, running_time, koin_secret, koin_myth, activity, total_fishing,quest)
    local progress = (progress_quest1 + progress_quest2 + progress_quest3 + progress_quest4) / 4
    local nama = player.Name
    local job_id = game.JobId
    local rod = current_rod
    local list_inv = display_inventory()
    koin = gui:WaitForChild("Events").Frame.CurrencyCounter.Counter.Text
    local lokasi = player:GetAttribute("LocationName")
    local params = string.format(
        "?nama=%s&status=%s&lokasi=%s&rod=%s&koin=%s&koin_secret=%s&koin_myth=%s&running_time=%s&activity=%s&total_fishing=%s&job_id=%s&progress=%s&quest=%s&inventory=%s",
        nama,
        status,
        HttpService:UrlEncode(tostring(lokasi)),
        HttpService:UrlEncode(tostring(rod)),
        HttpService:UrlEncode(koin),
        HttpService:UrlEncode(tostring(koin_secret)),
        HttpService:UrlEncode(tostring(koin_myth)),
        HttpService:UrlEncode(tostring(running_time)),
        HttpService:UrlEncode(tostring(activity)),
        total_fishing,
        job_id,
        HttpService:UrlEncode(tostring(progress)),
        HttpService:UrlEncode(tostring(quest)),
        HttpService:UrlEncode(tostring(list_inv))
    )
    local url = SERVER_URL .. params
    task.spawn(function()
        local ok, res = pcall(function()
            return request({Url = url, Method = "GET"})
        end)
        if ok and res then
            print("OK:", res.StatusCode)
        else
            warn("Request error:", res)
        end
    end)
end
-- //ANCHOR SPAWN
--------------------------------------------------------------------
--- SPAWN
--------------------------------------------------------------------

--update_inventory()
send_Data("START","-", 0, 0, "-", 0,"-")
task.spawn(
    function()
        local num = 1
        local flag_error = false
        local running_time
        while running do
            local currentTime = os.clock()
            running_time = formatTime(math.floor(getOnlineTime()))
            text_jam.Text = running_time
            if lastCatchTime then
                local delta = currentTime - lastCatchTime
                delta = math.floor(delta * 10 + 0.5) / 10
                if delta < 30 then
                    flag_error = false
                    text_timer.Text = "üü¢ " .. delta .. " sec."
                    status = "RUNNING"
                else
                    flag_error = true
                    mainFrame.BackgroundColor3 = Color3.fromRGB(39, 22, 22)
                    text_timer.Text = "üî¥ " .. delta .. " sec."
                    status = "ERROR"
                end
                if delta > 120 and stop_watching == false then
                    rejoinSameServer()
                    task.wait(60)
                end
            end
            if flag_error == true then
                task.wait(0.5)
                Net:WaitForChild("RF/CancelFishingInputs"):InvokeServer(tick())
                task.wait(0.5)
                Net:WaitForChild("RE/FishingCompleted"):FireServer()
                task.wait(0.5)
                mainFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
                lastCatchTime = os.clock()
                flag_error = false --reset flag
            end
            if num % 180 == 0 then
                send_Data(status,running_time, total_harga_secret, total_harga_mythic, last_msg, count_mancing,select_quest)
            end
            if num % 300 == 0 then
                Net:WaitForChild("RE/EquipToolFromHotbar"):FireServer(1)
                mainFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
                task.wait(2)
                Net:WaitForChild("RF/SellAllItems"):InvokeServer(now)
                task.wait(2)
                hapus_gui_daily()
            end
            
            num = num + 1
            task.wait(1)
        end
    end
)

--//ANCHOR MAIN
---------------------------------------------
---MULAI ALGORITMA
---------------------------------------------
-- TWEAK
Net:WaitForChild("RE/ChangeSetting"):FireServer("Server Notifications", false)
Net:WaitForChild("RE/ChangeSetting"):FireServer("Global Notifications", false)
task.wait(5)
update_inventory()
hapus_gui_daily()
SetLowGraphics()
toggle3DAndUI()

print("INISIALISASI --------------------------")
player.CharacterAdded:Connect(attachSmartPlatform)
if player.Character then
    attachSmartPlatform(player.Character)
end
auto_buy()
current_rod = best_rod_wear()
if current_rod == "Ghostfinn Rod" then
    select_quest = "jungle"
else
    select_quest = "deep_sea"
end
print(select_quest)
update_quest()
Net:WaitForChild("RE/EquipToolFromHotbar"):FireServer(1)

print("MAIN PROGRAM -------------------------------")

if select_quest == "deep_sea" then
    print(progress_quest1)
    print(progress_quest2)
    print(progress_quest3)
    print(progress_quest4)
    if running and progress_quest1 < 100 then
        pesan(quest_deep_sea(1))
        teleport(-3602, -283, -1612)
        task.wait(3)
        face(120)
        while progress_quest1 < 100 do
            auto_fish()
            if not running then
                break
            end
        end
    end
    if running and ((progress_quest2 + progress_quest3 + progress_quest4) / 3) < 100 then
        pesan(quest_deep_sea(3))
        teleport(-3734, -135, -1013)
        task.wait(3)
        face(0)
        while ((progress_quest2 + progress_quest3 + progress_quest4) / 3) < 100 do
            auto_fish()
            if not running then
                break
            end
        end
    end
    pesan("selesai deep sea quest")
    select_quest = "jungle"
end
if select_quest == "jungle" then
    local exists = workspace["JUNGLE INTERACTIONS"].Doors.TempleDoor:FindFirstChild("DELETE_ME_AFTER_UNLOCK")

    if exists then
        print("Model ditemukan!")
        step = 1
    else
        step = 3
    end

    while playing do
        if step == 0 then
            break
        end
        if step == 1 then
            if running and list_inventory_fishs[265] == nil then
                pesan("farming artifak > 1. Arrow")
                x, y, z, arah = teleport_string(json.quest.jungle.arrow)
                teleport(x, y, z)
                task.wait(5)
                face(arah)
                while list_inventory_fishs[265] == nil do
                    auto_fish()
                    if not running then
                        break
                    end
                end
            end
            if running and list_inventory_fishs[266] == nil then
                pesan("farming artifak > 2. cressent")
                x, y, z, arah = teleport_string(json.quest.jungle.crescent)
                teleport(x, y, z)
                task.wait(5)
                face(arah)
                while list_inventory_fishs[266] == nil do
                    auto_fish()
                    if not running then
                        break
                    end
                end
            end
            if running and list_inventory_fishs[267] == nil then
                pesan("farming artifak > 3. diamond")
                x, y, z, arah = teleport_string(json.quest.jungle.diamond)
                teleport(x, y, z)
                task.wait(5)
                face(arah)
                while list_inventory_fishs[267] == nil do
                    auto_fish()
                    if not running then
                        break
                    end
                end
            end
            if running and list_inventory_fishs[271] == nil then
                pesan("farming artifak > 4. Hourglass")
                x, y, z, arah = teleport_string(json.quest.jungle.hourglass)
                teleport(x, y, z)
                task.wait(5)
                face(arah)
                while list_inventory_fishs[271] == nil do
                    auto_fish()
                    if not running then
                        break
                    end
                end
            end
            if
                list_inventory_fishs[265] ~= nil and list_inventory_fishs[266] ~= nil and
                    list_inventory_fishs[267] ~= nil and
                    list_inventory_fishs[271] ~= nil
             then
                pesan("selesai farming artifak")
                step = step + 1
            end
        end

        if step == 2 then
            pesan("STEP 2 !!")
            stop_watching = true
            local list_artifak = {265, 266, 267, 271}
            for i, k in ipairs(list_artifak) do
                if list_inventory_fishs[k] ~= nil then
                    if i == 1 then
                        teleport(897, 8, -361)
                        task.wait(5)
                        Net:WaitForChild("RE/EquipItem"):FireServer(list_inventory_fishs[k].UUID, "Fishes")
                        task.wait(1)
                        Net:WaitForChild("RE/PlaceLeverItem"):FireServer("Arrow Artifact")
                        task.wait(1)
                    end
                    if i == 2 then
                        teleport(1420, 31, 79)
                        task.wait(5)
                        Net:WaitForChild("RE/EquipItem"):FireServer(list_inventory_fishs[k].UUID, "Fishes")
                        task.wait(1)
                        Net:WaitForChild("RE/PlaceLeverItem"):FireServer("Crescent Artifact")
                        task.wait(1)
                    end
                    if i == 3 then
                        teleport(1819, 8, -284)
                        task.wait(5)
                        Net:WaitForChild("RE/EquipItem"):FireServer(list_inventory_fishs[k].UUID, "Fishes")
                        task.wait(1)
                        Net:WaitForChild("RE/PlaceLeverItem"):FireServer("Diamond Artifact")
                        task.wait(1)
                    end
                    if i == 4 then
                        teleport(1485, 8, -861)
                        task.wait(5)
                        Net:WaitForChild("RE/EquipItem"):FireServer(list_inventory_fishs[k].UUID, "Fishes")
                        task.wait(1)
                        Net:WaitForChild("RE/PlaceLeverItem"):FireServer("Hourglass Diamond Artifact")
                        task.wait(1)
                    end
                end
            end

            while true do
                local pintu = workspace["JUNGLE INTERACTIONS"].Doors.TempleDoor:FindFirstChild("DELETE_ME_AFTER_UNLOCK")
                if pintu then
                    print("menunggu")
                    pesan("menunggu pintu terbuka")
                else
                    break
                end
                task.wait(20)
            end
            stop_watching = false
            pesan("WAITING REJOIN GAME !!")
            step = step + 1
            rejoinSameServer()
            task.wait(60)
            break
        end

        if step == 3 then
            pesan("STEP 3 !!")
            if running and progress_quest3 < 100 then
                pesan(quest_jungle(3))
                teleport(1510, -22, -629)
                task.wait(3)
                face(0)
                while progress_quest3 < 100 do
                    auto_fish()
                    if not running then
                        break
                    end
                end
            end
            if running and progress_quest2 < 100 then
                pesan(quest_jungle(2))
                teleport(878, 4, -351)
                task.wait(3)
                face(0)
                while progress_quest2 < 100 do
                    auto_fish()
                    if not running then
                        break
                    end
                end
            end
            if running and progress_quest4 < 100 then
                pesan(quest_jungle(4))
                -- manual goto altar and give secret 3
                teleport(1487, 128, -591)
                pesan("SELESAI MANUAL SACRIFICE")
                break
            end
        end
        text_timer.Text = "waiting running..."
        task.wait(15)
    end
end
running = false
root.Anchored = false
print("running : ", running)
print("-----------------end-------------")
--]]
-----------------------------------------------------------------
--               E N D     M A I N
-----------------------------------------------------------------
